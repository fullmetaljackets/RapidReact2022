// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot.commands;

import edu.wpi.first.wpilibj2.command.ParallelDeadlineGroup;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import edu.wpi.first.wpilibj2.command.WaitCommand;
import frc.robot.subsystems.DriveTrain;
import frc.robot.subsystems.Feeder;
import frc.robot.subsystems.Intake;
import frc.robot.subsystems.Shooter;
import frc.robot.subsystems.Trigger;

// NOTE:  Consider using this command inline, rather than writing a subclass.  For more
// information, see:
// https://docs.wpilib.org/en/stable/docs/software/commandbased/convenience-features.html
public class Auto_Two_Ball extends SequentialCommandGroup {
  /** Creates a new Auto_Two_Ball. */
  public Auto_Two_Ball(Shooter m_shooter, Trigger m_trigger, DriveTrain m_driveTrain, Feeder m_feeder ,Intake m_intake) {
    // Add your commands in the addCommands() call, e.g.
    // addCommands(new FooCommand(), new BarCommand());
    addCommands(
      parallel(new TopShooter_Run(.58, .60, m_shooter).withTimeout(5),
                sequence(new WaitCommand(2),
                         new Trigger_Run(1, m_trigger).withTimeout(3)
                        )                
                ),
              new ParallelDeadlineGroup(new DriveDistance_Inch(100, 0.5, 0.0, m_driveTrain), 
              new Intake_Cargo_Run(-.7, m_intake)),
              parallel(new DriveDistance_Inch(100, -0.5, 0.0, m_driveTrain),
                     
                     
                      parallel(new Intake_Cargo_Run(-.7, m_intake).withTimeout(3),
                              new Feeder_Run(1, m_feeder).withTimeout(3),
                      parallel(new TopShooter_Run(.58, .60, m_shooter).withTimeout(6),
                              sequence(new WaitCommand(3),
                              (new Trigger_Run(1, m_trigger).withTimeout(3)
                              )                
              )  
              )
              ) 
              )   
        );
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
